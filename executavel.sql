--Select * from Tabela1
--Where Tabela1.ID NOT IN (Select ID * from Tabela2),

--SELECT table1.columnID
--FROM batabase.table1
--EXCEPT  
--SELECT table2.columnID
--FROM database.table2;  

--PRIMEIRO PASSO  
--CONSULTANDO AS TABELAS -> > EXTRAIR TABELAS E COLAR NAS PLANILHAS
--SELECT * FROM CRS
--SELECT * FROM ESTRATEGY 
--> Primeiras tabelas criadas ( deixar uma semana pra teste e excluir após esse período [29/11/2018] )

SELECT count(*) FROM MICROESTRATEGY --CONTAGEM DE LINHAS
SELECT * FROM MICROESTRATEGY
where ID_POLICY ='AZULI200008376'

SELECT * FROM MICROESTRATEGY
SELECT * FROM CRSREL

SELECT * FROM CRSREL
SELECT COUNT(*) FROM CRSREL
SELECT * FROM CRSREL
WHERE POLICY = 'AZULI200008376'



--SEGUNDO PASSO 
--Registros do CRS que não são iguais aos da ESTRATEGY -> > GERAR COLUNA E FAZER UM PROCV COM A PLANILHA DE CRS E TRAZER O VALOR DO PREMIO
--OBS.: NÃO ESQUECER DE PREENCHER A COLUNA DE SITUAÇÃO PARA INDICAR ONDE ELE ESTÁ

SELECT 
CRSREL.[POLICY]
--CRS.[TOTAL PREMIUM]
FROM CRSREL
EXCEPT 
SELECT 
MICROESTRATEGY.[ID_POLICY]
--ESTRATEGY.[PREMIUM] 
FROM MICROESTRATEGY

--TERCEIRO PASSO 
--Registros do Estrategy que não estão no CRS -> > GERAR COLUNA E COLAR EMBAIXO DA QUE FORA GERADO ACIMA. FAZER PROCV COM A PLANILHA DE ESTRATEGY TRAZENDO O VALOR DO PREMIO
--OBS.: NÃO ESQUECER DE PREENCHER A COLUNA DE SITUAÇÃO PARA INDICAR ONDE ELE ESTÁ

SELECT 
MICROESTRATEGY.[ID_POLICY]
--ESTRATEGY.[PREMIUM] 
FROM MICROESTRATEGY
EXCEPT 
SELECT
CRSREL.[POLICY]
--CRS.[TOTAL PREMIUM]
FROM CRSREL

--QUARTO PASSO 
--Registos do CRS ESTÃO no ESTRATEGY -> > GERAR COLUNA E COLAR EMBAIXO DAS GERADAS ACIMA. FAZER PROCV COM A PLANILHA DE CRS E TRAZER O VALOR DO PREMIO
--OBS.: NÃO ESQUECER DE PREENCHER A COLUNA DE SITUAÇÃO PARA INDICAR ONDE ELE ESTÁ


SELECT 
MICROESTRATEGY.[ID_POLICY]
FROM MICROESTRATEGY WHERE MICROESTRATEGY.[ID_POLICY] LIKE 'A%'
INTERSECT
SELECT
CRSREL.[POLICY]
FROM CRSREL WHERE CRSREL.[POLICY] LIKE 'A%'


SELECT
CRSREL.[POLICY]
FROM CRSREL WHERE CRSREL.[POLICY] LIKE 'A%'
INTERSECT
SELECT 
MICROESTRATEGY.[ID_POLICY]
FROM MICROESTRATEGY WHERE MICROESTRATEGY.[ID_POLICY] LIKE 'A%'




--Registros que só existem na CRS e na ESTRATEGY
--Registros das duas tabelas que não têm correspondência.

SELECT *
FROM CRS
FULL OUTER JOIN ESTRATEGY
ON CRS.[POLICY] = ESTRATEGY.[ID_POLICY]
WHERE CRS.[POLICY] IS NULL OR ESTRATEGY.[ID_POLICY] IS NULL

--DROP TABLE ESTRATEGY
--DROP TABLE CRS, CRSMICROESTRATEGY

--SELECT COUNT(*) FROM ESTRATEGY
--SELECT COUNT(*) FROM CRS
--SELECT count(*) FROM CRSMICROESTRATEGY
--SELECT * FROM CRSMICROESTRATEGY



SELECT * FROM RELATORIOCM$	
SELECT * FROM DETALHAMENTO	
SELECT * FROM DETALHAMENTOAZUL

SELECT SUBSTRING(CONVERT(VARCHAR,DATA,106),4,8) FROM DETALHAMENTOAZUL	
--SELECT CONVERT(VARCHAR,DATA,106)FROM DETALHAMENTO	

SELECT	POLICY, PREMIUM, SITUACAO, CONVERT(VARCHAR, DATEPART(MM, DATE)) + '-' + CONVERT(VARCHAR, DATEPART(YY, DATE)) AS DATE
INTO	DETALHAMENTOAZULFINAL
FROM	DETALHAMENTOAZUL

SELECT	* FROM DETALHAMENTOAZULFINAL WHERE SITUACAO LIKE 'CRS'

--DROP TABLE DETALHAMENTOAZULFINAL
SELECT	* FROM DETALHAMENTOAZULFINAL WHERE SITUACAO LIKE ''


SELECT * FROM DETALHAMENTOAZUL

SELECT * FROM DETALHAMENTOAZULFINAL


